CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(@template_name@)

#### compile setting
SET(CMAKE_C_STANDARD 11)
SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_C_FLGAS "-fPIC -DPIC")
SET(CMAKE_CXX_FLGAS "-fPIC -DPIC")

#### path setting
SET(CMAKE_INSTALL_PREFIX "/opt/myframe")
SET(MYFRAME_ROOT ${CMAKE_INSTALL_PREFIX})
SET(MYFRAME_INSTALL_CONF_DIR ${MYFRAME_ROOT}/actor)
SET(MYFRAME_INSTALL_LIB_DIR ${MYFRAME_ROOT}/lib)

#### dep 3rd lib
FIND_PACKAGE(jsoncpp REQUIRED)
FIND_PACKAGE(gflags REQUIRED)
FIND_PACKAGE(GTest REQUIRED)

#### include directory
INCLUDE_DIRECTORIES(${MYFRAME_ROOT}/inc)

#### lib path
LINK_LIBRARIES(dl pthread)
LINK_LIBRARIES(glog gflags jsoncpp)
LINK_DIRECTORIES(${MYFRAME_ROOT}/lib)

#### genrate mod lib
ADD_LIBRARY(${PROJECT_NAME} SHARED
    ${PROJECT_NAME}.cpp
)
TARGET_LINK_LIBRARIES(${PROJECT_NAME}
    myframe
)

#### install
INSTALL(TARGETS ${PROJECT_NAME}
    LIBRARY DESTINATION ${MYFRAME_INSTALL_LIB_DIR}
    ARCHIVE DESTINATION ${MYFRAME_INSTALL_LIB_DIR}
    RUNTIME DESTINATION ${MYFRAME_INSTALL_LIB_DIR}
)
FILE(GLOB conf_files "*.json")
INSTALL(FILES 
    ${conf_files}
    PERMISSIONS
    OWNER_READ
    GROUP_READ
    WORLD_READ
    DESTINATION ${MYFRAME_INSTALL_CONF_DIR}
)